name: Terraform

on:
  # schedule:
  #   - cron:  '30 23 * * 0-4'
  #   - cron:  '0 1 * * 1-5'
  workflow_dispatch:
    inputs:
      do_apply:
        description: 'apply? or not(destroy)'
        required: true
        type: boolean

env:
  TF_BUCKET_NAME             : ${{ vars.bucket_name }}
  TF_BUCKET_PREFIX           : ${{ vars.bucket_prefix }}

  TF_VAR_region              : ${{ vars.region }}
  TF_VAR_ami_name_prefix     : ${{ vars.ami_name_prefix }}
  TF_VAR_instance_type       : ${{ vars.instance_type }}
  TF_VAR_device_name         : ${{ vars.device_name }}
  TF_VAR_max_price           : ${{ vars.max_price }}

  TF_VAR_subnet_id           : ${{ secrets.subnet_id }}
  TF_VAR_ssh_port            : ${{ secrets.ssh_port }}
  TF_VAR_security_group_name : ${{ secrets.security_group_name }}
  TF_VAR_user_id             : ${{ secrets.user_id }}
  TF_VAR_user_name           : ${{ secrets.user_name }}
  TF_VAR_keypair_name        : ${{ secrets.keypair_name }}
  TF_VAR_profile_name        : ${{ secrets.profile_name }}
  TF_VAR_volume_id           : ${{ secrets.volume_id }}


jobs:
  create_gce:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }} # 'ap-northeast-1'
          role-to-assume: ${{ vars.AWS_IAM_ROLE }} # 'arn:aws:iam::<AWSアカウントID>:role/<IAMロール名>'

      - uses: hashicorp/setup-terraform@v2
      - run: terraform fmt -check -recursive
      - run: terraform init -backend-config="bucket=$TF_BUCKET_NAME" -backend-config="prefix=$TF_BUCKET_PREFIX"
      - run: terraform validate
      - run: terraform plan -no-color -lock-timeout=60m

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && ((github.event_name == 'schedule' && github.event.schedule == '30 23 * * 0-4') || (github.event_name == 'workflow_dispatch' && inputs.do_apply))
        run: terraform apply -auto-approve -input=false
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && ((github.event_name == 'schedule' && github.event.schedule == '0 1 * * 1-5') || (github.event_name == 'workflow_dispatch' && !inputs.do_apply))
        run: terraform destroy -auto-approve -input=false
